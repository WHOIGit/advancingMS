setwd("~/Dropbox/_projects/workingWithIS/for_gitHub")
suppressMessages(library(xcms))
suppressMessages(library(CAMERA))
library(RColorBrewer)
library(XLConnect)
library(pander)
library(magrittr)
#Need these for plotting
library(ggplot2)
library(ggdendro)
#setup the option to use parallel processing...arabica has four cores, from this function: detectCores()
register(bpstart(SnowParam(4)))
#library(tictoc) #use this to time the new functions, off if not needed
getwd()
#same file organization as in XCMS < 3
usePath <- "C:/Users/Krista/Documents/Dropbox/_projects/workingWithIS/for_gitHub/mzML_Lumos_MS1_updated"
ext <- ".mzML"
pre <- paste0(usePath,"/")
mzdatafiles <- list.files(usePath,recursive = FALSE, full.names=TRUE,
pattern = paste0("\\",ext))
#Setup the ability to rename the classes based on information in the CSV file.
#10/2018: setup the groups now...no need to do peak picking on data files that I will not use (and
#easier with the new XCMS3 code since sampclass no longer exists in XCMS3)
wDir <-  "C:/Users/Krista/Documents/Dropbox/_projects/workingWithIS/for_gitHub/sequence_fromMethods/"
all <- readWorksheetFromFile(paste0(wDir,"mtab_Weber_Cuba_uplc_Lumos_062018.KL.xlsx"),sheet = 1)
#Setup the ability to rename the classes based on information in the CSV file.
#10/2018: setup the groups now...no need to do peak picking on data files that I will not use (and
#easier with the new XCMS3 code since sampclass no longer exists in XCMS3)
wDir <-  "C:/Users/Krista/Documents/Dropbox/_projects/workingWithIS/for_gitHub/sequence_fromMethods/"
all <- readWorksheetFromFile(paste0(wDir,"mtab_Weber_Cuba_uplc_Lumos_062018.KL.xlsx"),sheet = 1)
putDataHere <-data.frame()
#what data do I want to keep...put that here
keep = "negative.1"
for(i in 1:length(all$File.Name)) {
h <- all$File.Name[i]
#paste0 will strip out the spaces; make the full filename here
h <-paste0(pre,h,ext)
#pull tData now, so I can look for a match with the 'keep' variable I set at line 63
tData <- all[i,]
test = paste0(tData$ionMode,".",tData$goodData)
#only proceed if test == keep
tm = match(test,keep)
if (!is.na(tm)) {
#this will pick up the right row in mzdatafiles
m <- match(basename(h),basename(mzdatafiles))
if (!is.na(m)) {
if (nrow(putDataHere)==0) {
putDataHere <- tData
putDataHere$FileWithExtension <- basename(h) #this will have the mzML extension...useful later
} else {
useIdx = nrow(putDataHere)+1
putDataHere[useIdx,] <-tData
putDataHere$FileWithExtension[useIdx] <- basename(h)
rm(useIdx)
}
}
rm(m)
} #this ends the final if statement
rm(h,test,tData,tm)
} #this ends the for loop
rm(all) #keep this clean...
#reading in the data files will be fast
my_data <- readMSData(files = paste0(pre,putDataHere$FileWithExtension),
pdata = new("NAnnotatedDataFrame",putDataHere),mode="onDisk")
#note that we are reading in data that has been converted to centroid mode using msconvert. The new XCMS3 can also do the centroid conversion, though I haven't tested it out.
# #can access the sample information with this code:
# pData(my_data)
# my_data$FileWithExtension #example of how to get individual variables
# #setup the filenames all in one place bc easier...
nDate <- "2019.05.06_v1"
nBase <- "Weber_PPL_UPLC_neg_samples_KLworking"
fName_allPeaks <- paste0(nBase,'_listAllPeaks.',nDate,'.csv')
fName_aligned <- paste0(nBase,'_aligned.',nDate,'.csv')
fName_peaksPicked <- paste0(nBase, '_picked.',nDate, '.pdf')
#fName_TICplot <- paste0(nBase,'_TICplot.',nDate,'.pdf')
NameOfFile <- paste0(nBase,"_",nDate,".Rimage")
rm(nDate,nBase)
save.image(NameOfFile)
quit()
q()
setwd("~/Dropbox/_projects/workingWithIS/advancingMS")
getwd()
dir()
dir()
nBase <- "simple_XCMS3_output"
fName_allPeaks <- paste0(nBase,'_listAllPeaks','.csv')
fName_aligned <- paste0(nBase,'_aligned','.csv')
fName_peaksPicked <- paste0(nBase, '_picked', '.pdf')
NameOfFile <- paste0(nBase,".Rimage")
rm(list = ls.str())
suppressMessages(library(xcms))
suppressMessages(library(CAMERA))
library(RColorBrewer)
library(XLConnect)
library(pander)
library(magrittr)
#Need these for plotting
library(ggplot2)
library(ggdendro)
#setup the option to use parallel processing...arabica has four cores, from this function: detectCores()
register(bpstart(SnowParam(4)))
#same file organization as in XCMS < 3
#path to the mzML files (need to set on each computer)
usePath <- "C:/Users/Krista/Documents/Dropbox/_projects/workingWithIS/advancingMS/mzML_Lumos_MS1_updated"
ext <- ".mzML"
pre <- paste0(usePath,"/")
mzdatafiles <- list.files(usePath,recursive = FALSE, full.names=TRUE,
pattern = paste0("\\",ext))
setwd(usePath)
getwd()
setwd("~/Dropbox/_projects/workingWithIS/mzML_Lumos_MS1_updated")
getwd()
usePath <- "C:/Users/Krista/Documents/Dropbox/_projects/workingWithIS/mzML_Lumos_MS1_updated"
ext <- ".mzML"
mzdatafiles <- list.files(usePath,recursive = FALSE, full.names=TRUE,
pattern = paste0("\\",ext))
setwd("~/Dropbox/_projects/workingWithIS/advancingMS")
q()
